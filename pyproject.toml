[tool.poetry]
name = "ak_rpi"
version = "0.0.1"
description = "This is a repository for synchronizing Raspberry Pis with AccessKit."
authors = ["Sam Wolk <wolk.sam@gmail.com>"]
repository = "https://github.com/szvsw/ak-rpi"
documentation = "https://szvsw.github.io/ak-rpi/"
readme = "README.md"
packages = [
  {include = "ak_rpi"}
]

[tool.poetry.dependencies]
python = ">=3.12,<4.0"
pydantic = "^2.10.1"
pydantic-settings = "^2.6.1"
requests = "^2.32.3"
httpx = "^0.27.2"
psutil = "^6.1.0"
pygame = "^2.6.1"
pydub = "^0.25.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
pyright = "^1.1.382"
pre-commit = "^3.4.0"
tox = "^4.11.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.2.7"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}

[tool.poetry.scripts]
ak-rpi = "ak_rpi.main:main"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"



[tool.pyright]
include = ["ak_rpi"]
typeCheckingMode = "standard"
venvPath = "."
venv = ".venv"

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
target-version = "py312"
line-length = 88
fix = true
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
    # doc strings
    "D"
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["ak_rpi"]


[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]
